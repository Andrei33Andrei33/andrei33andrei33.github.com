// ****************************************************
// ********** TYPE: Mixins and functions **************
// ****************************************************

$grid-breakpoints-len: length($grid-breakpoints)



=row-gutters
  +margin-x(map-get($grid-gutters, d) / -2)
  @each $screen, $gutter in map-unique-values($grid-gutters, $grid-breakpoints)
    +respond-to($screen)
      +margin-x($gutter / -2)

=col-gutters
  +padding-x(map-get($grid-gutters, d) / 2)
  @each $screen, $gutter in map-unique-values($grid-gutters, $grid-breakpoints)
    +respond-to($screen)
      +padding-x($gutter / 2)



=grid__col
  vertical-align: top
  font-family: sans-serif
  letter-spacing: normal
  word-spacing: normal
  text-rendering: auto
  zoom: 1

=row__col
  display: inline-block
  *display: inline
  +grid__col

=block-sidebar__col
  position: relative
  +grid__col
  +col-gutters





// ****************************************************
// ******************** TYPE: row *********************
// ****************************************************

.row
  letter-spacing: -0.31em
  *letter-spacing: normal
  *word-spacing: -0.43em
  text-rendering: optimizespeed
  font-family: FreeSans, Arimo, "Droid Sans", Helvetica, Arial, sans-serif
  +flexbox
  +flex-flow(row wrap)
  +align-content(flex-start)
  position: relative
  font-size: 0
  flex: 1
  zoom: 1
  +clearfix

  &--gutters
    +row-gutters
    & > .col
      box-sizing: border-box
      +col-gutters



.opera-only:-o-prefocus, .row
  word-spacing: -0.43em





// ****************************************************
// ****************** TYPE: Columns *******************
// ****************************************************

@each $grid-cols in $grid-sizes

  .col-#{$grid-cols}
    +row__col

  @for $i from 1 through $grid-cols
    .col-#{$grid-cols}--#{$i}
      width: 100% / $grid-cols * $i
      @if $i != $grid-cols
        *width: (100% / $grid-cols * $i) - 0.031

  @each $screen, $break in $grid-breakpoints
    @media screen and (min-width: $break)
      @for $i from 1 through $grid-cols
        .col-#{$grid-cols}--#{$screen}-#{$i}
          width: 100% / $grid-cols * $i
          @if $i != $grid-cols
            *width: (100% / $grid-cols * $i) - 0.031





// ****************************************************
// ************* TYPE: Block with sidebar *************
// ****************************************************

.block-sidebar
  +row-gutters
  display: block
  margin-bottom: 25px
  @media screen and (min-width: map-get($grid-breakpoints, $aside-banner-show))
    display: table
    margin-bottom: 55px

  &__content
    +block-sidebar__col
    @media screen and (min-width: map-get($grid-breakpoints, $aside-banner-show))
      display: table-cell
      width: 100%

  &__aside
    +block-sidebar__col
    display: none
    min-width: $aside-banner-width + $aside-banner-padding * 2
    max-width: $aside-banner-width + $aside-banner-padding * 2
    @media screen and (min-width: map-get($grid-breakpoints, $aside-banner-show))
      display: table-cell
      vertical-align: top